// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcMeetcha.Data;

namespace MvcMeetcha.Migrations
{
    [DbContext(typeof(MvcMeetchaContext))]
    [Migration("20200519192340_GroupFileFeatures")]
    partial class GroupFileFeatures
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MvcMeetcha.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("GroupImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GroupTypeId")
                        .HasColumnType("int");

                    b.HasKey("GroupId");

                    b.HasIndex("GroupTypeId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("MvcMeetcha.Models.GroupType", b =>
                {
                    b.Property<int>("GroupTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupTypeName")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GroupTypeId");

                    b.ToTable("GroupType");

                    b.HasData(
                        new
                        {
                            GroupTypeId = 1,
                            GroupTypeName = "Arts"
                        },
                        new
                        {
                            GroupTypeId = 2,
                            GroupTypeName = "Beliefs"
                        },
                        new
                        {
                            GroupTypeId = 3,
                            GroupTypeName = "Book Clubs"
                        },
                        new
                        {
                            GroupTypeId = 4,
                            GroupTypeName = "Career & Business"
                        },
                        new
                        {
                            GroupTypeId = 5,
                            GroupTypeName = "Dance"
                        },
                        new
                        {
                            GroupTypeId = 6,
                            GroupTypeName = "Family"
                        },
                        new
                        {
                            GroupTypeId = 7,
                            GroupTypeName = "Fashion & Beauty"
                        },
                        new
                        {
                            GroupTypeId = 8,
                            GroupTypeName = "Film"
                        },
                        new
                        {
                            GroupTypeId = 9,
                            GroupTypeName = "Food & Drinks"
                        },
                        new
                        {
                            GroupTypeId = 10,
                            GroupTypeName = "Health & Wellness"
                        },
                        new
                        {
                            GroupTypeId = 11,
                            GroupTypeName = "Hobbies & Crafts"
                        },
                        new
                        {
                            GroupTypeId = 12,
                            GroupTypeName = "Language & Culture"
                        },
                        new
                        {
                            GroupTypeId = 13,
                            GroupTypeName = "Learning"
                        },
                        new
                        {
                            GroupTypeId = 14,
                            GroupTypeName = "Movements"
                        },
                        new
                        {
                            GroupTypeId = 15,
                            GroupTypeName = "Music"
                        },
                        new
                        {
                            GroupTypeId = 16,
                            GroupTypeName = "Outdoors & Adventure"
                        },
                        new
                        {
                            GroupTypeId = 17,
                            GroupTypeName = "Pets"
                        },
                        new
                        {
                            GroupTypeId = 18,
                            GroupTypeName = "Photography"
                        },
                        new
                        {
                            GroupTypeId = 19,
                            GroupTypeName = "Sci-Fi & Games"
                        },
                        new
                        {
                            GroupTypeId = 20,
                            GroupTypeName = "Social"
                        },
                        new
                        {
                            GroupTypeId = 21,
                            GroupTypeName = "Sports & Fitness"
                        },
                        new
                        {
                            GroupTypeId = 22,
                            GroupTypeName = "Writing"
                        });
                });

            modelBuilder.Entity("MvcMeetcha.Models.Group", b =>
                {
                    b.HasOne("MvcMeetcha.Models.GroupType", "GroupType")
                        .WithMany()
                        .HasForeignKey("GroupTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
